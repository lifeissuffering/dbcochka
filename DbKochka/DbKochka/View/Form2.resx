<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        xXXbUrPMvUoAAAAASUVORK5CYII=
</value>
  </data>
</root>